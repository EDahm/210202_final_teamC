<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.zerock.mapper.auctionMapper">

<!-- 경매신청 -->
<insert id="aucApplyIns">
	insert into auc_aply_tb(aa_bno, c_num, aa_hope_prd, aa_item_nm, aa_markt_prc, aa_weight, aa_cntry_orgn)
	values('AA'||to_char(sysdate, 'YYYY-MM-DD')||'-'||seq_auc_aply.nextval, #{c_num}, #{aa_hope_prd}, #{aa_item_nm}, #{aa_markt_prc}, #{aa_weight}, #{aa_cntry_orgn})
</insert>

<insert id="aucApplyInsKey">
	<selectKey keyProperty="aa_bno" order="BEFORE" resultType="String">
		select 'AA'||to_char(sysdate, 'YYYY-MM-DD')||'-'||seq_auc_aply.nextval from dual
	</selectKey>
	insert into auc_aply_tb(aa_bno, c_num, aa_hope_prd, aa_item_nm, aa_markt_prc, aa_weight, aa_cntry_orgn)
	values(#{aa_bno}, #{c_num}, #{aa_hope_prd}, #{aa_item_nm}, #{aa_markt_prc}, #{aa_weight}, #{aa_cntry_orgn})
</insert>

<!-- 경매 신청 조회 -->
<select id="aucApplySelect" resultType="org.zerock.domain.aucApplyVO">
	select aa_bno, c_num, aa_hope_prd, aa_item_nm, aa_markt_prc, aa_weight, aa_cntry_orgn from auc_aply_tb where aa_bno = #{aa_bno}
</select>

<!-- 경매 신청 전체 조회 -->
<select id="aucApplyList"  resultType="org.zerock.domain.aucApplyVO">
	select aa_bno, c_num, aa_hope_prd, aa_item_nm, aa_markt_prc, aa_weight, aa_cntry_orgn from auc_aply_tb where aa_bno is not null
</select>

<select id="aucApplyListWithPaging" resultType="org.zerock.domain.aucApplyVO">
<![CDATA[
	select
		aa_bno, c_num,  aa_hope_prd, aa_item_nm, aa_markt_prc, aa_weight, aa_cntry_orgn
	from
		(
		select /*+INDEX_DESC(auc_aply_tb PK_AUC_APLY_TB)*/
			rownum rn, aa_bno, c_num, aa_hope_prd, aa_item_nm, aa_markt_prc, aa_weight, aa_cntry_orgn
		from
			auc_aply_tb
		where 
]]>
	<trim prefix="(" suffix=") AND " prefixOverrides="OR">
		<foreach item='type' collection="typeArr">
			<trim prefix="OR">
				<choose>
					<when test="type == 'T'.toString()">
						aa_item_nm like '%'||#{keyword}||'%'
					</when>
					<when test="type == 'C'.toString()">
						c_num like '%'||#{keyword}||'%'
					</when>
					<when test="type == 'W'.toString()">
						aa_hope_prd like '%'||#{keyword}||'%'
					</when>
				</choose>
			</trim>
		</foreach>	
	</trim>
	
	<![CDATA[
	
	rownum <= #{pageNum} * #{amount}
		)
	where rn > (#{pageNum} -1) * #{amount}		
]]>
</select>
<!-- 경매 신청 삭제 -->
<delete id="aucApplyDel">
	delete from auc_aply_tb where aa_bno = #{aa_bno}
</delete>

<!-- 경매 신청 수정 -->
<update id="aucApplyUpdate">
	update auc_aply_tb set 
	c_num = #{c_num},
	aa_item_nm = #{aa_item_nm},
	aa_hope_prd = #{aa_hope_prd},
	aa_markt_prc = #{aa_markt_prc},
	aa_weight = #{aa_weight},
	aa_cntry_orgn = #{aa_cntry_orgn}
	where aa_bno = #{aa_bno}
</update>

<!-- ============================================================================================= -->


<!-- 경매 진행 등록 -->
<insert id="aucAdd">
	insert into auc_tb(a_bno, aa_bno, a_versifier, a_crnt_prc, a_wnng_prc, a_state, a_prgrs_prd)
	values('A'||to_char(sysdate, 'YYYY-MM-DD')||'-'||seq_auc_aply.nextval, #{aa_bno}, #{a_versifier}, #{a_crnt_prc}, #{a_wnng_prc}, #{a_state}, #{a_prgrs_prd})
</insert>

<!-- 경매 진행 전체 조회 -->
<select id="aucIng" resultType="org.zerock.domain.auctionVO">
	select a_bno, aa_bno, a_versifier, a_crnt_prc, a_wnng_prc, a_state, a_prgrs_prd
	from auc_tb where a_state = '진행중'
</select>

<select id="aucListWithPaging" resultType="org.zerock.domain.auctionVO">
<![CDATA[
	select
		a_bno, aa_bno, a_versifier, a_crnt_prc, a_wnng_prc, a_state, a_prgrs_prd 
	from
		(
		select /*+INDEX_DESC(auc_tb PK_AUC_TB)*/
			rownum rn, a_bno, aa_bno, a_versifier, a_crnt_prc, a_wnng_prc, a_state, a_prgrs_prd
		from
			auc_tb
		where 
	]]>
	<trim prefix="(" suffix=") AND " prefixOverrides="OR">
		<foreach item='type' collection="typeArr">
			<trim prefix="OR">
				<choose>
					<when test="type == 'T'.toString()">
						a_bno like '%'||#{keyword}||'%'
					</when>
					<when test="type == 'C'.toString()">
						a_state like '%'||#{keyword}||'%'
					</when>
					<when test="type == 'W'.toString()">
						a_prgrs_prd like '%'||#{keyword}||'%'
					</when>
				</choose>
			</trim>
		</foreach>	
	</trim>
	
	<![CDATA[
	
	rownum <= #{pageNum} * #{amount}
		)
	where rn > (#{pageNum} -1) * #{amount}		
]]>
</select>

<select id="aucList" resultType="org.zerock.domain.auctionVO">
	select * from auc_tb where a_bno is not null
</select>

<!-- 경매 진행 단일 조회 -->
<select id="aucSelect" resultType="org.zerock.domain.auctionVO">
	select * from auc_tb where a_bno = #{aa_bno}
</select>

<!-- 경매 진행 수정 (현재가, 경매상태 제외) -->
<update id="aucUpdate">
	update auc_tb set a_versifier = #{a_versifier},
	a_wnng_prc = #{a_wnng_prc},
	a_prgrs_prd = #{a_prgrs_prd}
	where a_bno = #{a_bno}
</update>

<!-- 경매 진행 상태 변경 -->
<update id="aucStaUpdate">
	update auc_tb set a_state = #{a_state}
	where a_bno = #{a_bno}
</update>

<!-- 경매 진행 정보 삭제 -->
<delete id="aucDelete">
	delete from auc_tb where a_bno = #{a_bno}
</delete>

<!-- 배송정보 등록 -->
<insert id="shipInsert">
	insert into shpng_tb(a_bno, c_num, m_num, s_shpng_addr, s_shpng_cntct, s_shpng_stts)
	values(#{a_bno}, #{c_num}, #{m_num}, #{s_shpng_addr}, #{s_shpng_cntct},#{s_shpng_stts})
</insert>

<!-- 배송정보 수정 -->
<update id="shipUpdate">
	update shpng_tb set s_shpng_addr = #{s_shpng_addr},
	s_shpng_cntct = #{s_shpng_cntct}
	where a_bno = #{a_bno}
</update>

<!-- 배송 상태 수정 -->
<update id="shipStaUpdate">
	update shpng_tb set s_shpng_stts = #{s_shpng_stts}
	where a_bno = #{a_bno}
</update>

<!-- 배송 정보 단일 조회 -->
<select id="shipSelect" resultType="org.zerock.domain.aucShipVO">
	select * from shpng_tb where a_bno = #{a_bno}
</select>

<!-- 배송 정보 전체 조회 -->
<select id="shipList" resultType="org.zerock.domain.aucShipVO">
	select * from shpng_tb where a_bno is not null
</select>

<select id="shipListWithPaging" resultType="org.zerock.domain.aucShipVO">
<![CDATA[
	select
		a_bno, c_num, m_num, s_shpng_addr, s_shpng_cntct, s_shpng_stts 
	from
		(
		select /*+INDEX_DESC(shpng_tb PK_SHPNG_TB)*/
			rownum rn, a_bno, c_num, m_num, s_shpng_addr, s_shpng_cntct, s_shpng_stts
		from
			shpng_tb
		where	
		]]>
	<trim prefix="(" suffix=") AND " prefixOverrides="OR">
		<foreach item='type' collection="typeArr">
			<trim prefix="OR">
				<choose>
					<when test="type == 'T'.toString()">
						a_bno like '%'||#{keyword}||'%'
					</when>
					<when test="type == 'C'.toString()">
						c_num like '%'||#{keyword}||'%'
					</when>
					<when test="type == 'W'.toString()">
						s_shpng_stts like '%'||#{keyword}||'%'
					</when>
				</choose>
			</trim>
		</foreach>	
	</trim>
	
	<![CDATA[
	
	rownum <= #{pageNum} * #{amount}
		)
	where rn > (#{pageNum} -1) * #{amount}		
]]>
</select>

<!-- 배송정보 삭제 -->
<delete id="shipDelete">
	delete from shpng_tb where a_bno = #{a_bno}
</delete>

<!-- 입찰하기 -->
<insert id="bidInsert">
	{call
		declare
		begin
	insert into bid_tb(a_bno, m_num, b_bid_price)
	values (#{a_bno}, #{m_num}, #{b_bid_price});
	
	update mber_tb set m_point = m_point + 2 where m_num = #{m_num}; 
	end
	}
</insert>

<!-- 입찰정보 삭제 -->
<delete id="bidDelete" parameterType="map">
	delete from bid_tb where m_num = #{m_num}
	and b_bid_price = #{b_bid_price}
</delete>

<!-- 입찰정보 전체 조회 -->

<select id="bidList" resultType="org.zerock.domain.aucBidVO">
	select * from bid_tb order by b_bid_price DESC
</select>

<select id="bidListWithPaging" resultType="org.zerock.domain.aucBidVO">
<![CDATA[
	select
		a_bno, m_num, b_bid_price, b_bid_time, b_bid_state
	from
		(
		select /*+INDEX_DESC(bid_tb PK_BID_TB)*/
			rownum rn, a_bno, m_num, b_bid_price, b_bid_time, b_bid_state
		from
			bid_tb
		where 
		]]>
	<trim prefix="(" suffix=") AND " prefixOverrides="OR">
		<foreach item='type' collection="typeArr">
			<trim prefix="OR">
				<choose>
					<when test="type == 'T'.toString()">
						a_bno like '%'||#{keyword}||'%'
					</when>
					<when test="type == 'C'.toString()">
						m_num like '%'||#{keyword}||'%'
					</when>
					<when test="type == 'W'.toString()">
						b_bid_state like '%'||#{keyword}||'%'
					</when>
				</choose>
			</trim>
		</foreach>	
	</trim>
	
	<![CDATA[
	
	rownum <= #{pageNum} * #{amount}
		)
	where rn > (#{pageNum} -1) * #{amount}		
]]>
</select>

<!-- 경매 현재가+회원 정보 수정 -->

<update id="bidNowPrice">
  update auc_tb set a_crnt_prc = (select max(b_bid_price) from bid_tb)
</update>

<!-- 경매 현재가를 입찰한 회원 닉네임 가져오기 -->
<select id="bidNowMember" resultType="String">
	select b.m_ncnm 
	from bid_tb a, mber_tb b, auc_tb c
	where a.m_num =  b.m_num
	and c.a_crnt_prc = a.b_bid_price
	and a.a_bno in (select c.a_bno from auc_tb where c.a_state = '진행중')
</select>



<!-- 업체 리스트 출력 -->
<select id="aucComList" resultType="org.zerock.domain.aucComVO">
	select * from auc_cmpny_tb where c_num is not null
</select>

<select id="aucComListWithPaging" resultType="org.zerock.domain.aucComVO">
<![CDATA[
	select
		c_num, c_name, c_email, c_address, c_contact, c_sector 
	from
		(
		select /*+INDEX_DESC(auc_cmpny_tb PK_AUC_CMPNY_TB)*/
			rownum rn, c_num, c_name, c_email, c_address, c_contact, c_sector
		from
			auc_cmpny_tb
		where		
		]]>
	<trim prefix="(" suffix=") AND " prefixOverrides="OR">
		<foreach item='type' collection="typeArr">
			<trim prefix="OR">
				<choose>
					<when test="type == 'T'.toString()">
						c_num like '%'||#{keyword}||'%'
					</when>
					<when test="type == 'C'.toString()">
						c_name like '%'||#{keyword}||'%'
					</when>
					<when test="type == 'W'.toString()">
						c_sector like '%'||#{keyword}||'%'
					</when>
				</choose>
			</trim>
		</foreach>	
	</trim>
	
	<![CDATA[
	
	rownum <= #{pageNum} * #{amount}
		)
	where rn > (#{pageNum} -1) * #{amount}		
]]>
</select>

<!-- 업체 리스트 조회 -->
<select id="aucComGet" resultType="org.zerock.domain.aucComVO">
	select * from auc_cmpny_tb where c_num = #{c_num}
</select>

<!-- 업체 리스트 수정 -->
<update id="aucComMod">
	update auc_cmpny_tb set
	c_name = #{c_name},
	c_email = #{c_email},
	c_address = #{c_address},
	c_contact = #{c_contact},
	c_sector = #{c_sector}
	where c_num = #{c_num}
</update>

<!-- 업체 리스트 삭제 -->
<delete id="aucComDel">
	delete from auc_cmpny_tb where c_num = #{c_num}
</delete>

<!-- 업체 리스트 등록 -->
<insert id="aucComIns">
insert into auc_cmpny_tb(c_num, c_name, c_email, c_address, c_contact, c_sector)
values('C'||seq_auc_com.nextval, #{c_name}, #{c_email}, #{c_address}, #{c_contact}, #{c_sector})
</insert>

<!-- 데이터 개수 처리 -->
<select id="getTotalCountApply" resultType="int">
	select count(*) from auc_aply_tb where aa_bno is not null
</select>

<select id="getTotalCountNow" resultType="int">
	select count(*) from auc_tb where a_bno is not null
</select>

<select id="getTotalCountShip"	resultType="int">
	select count(*) from shpng_tb where a_bno is not null
</select>

<select id="getTotalCountCom"	resultType="int">
	select count(*) from auc_cmpny_tb where c_num is not null
</select>

<select id="getTotalCountBid"	resultType="int">
	select count(*) from bid_tb where a_bno is not null
</select>

<select id="getCountBid" resultType="int">
	select count(*) from bid_tb where a_bno = (select a_bno from auc_tb where a_state = '진행중')
</select>
</mapper>